{"version":3,"sources":["components/common/DivWhiteRoundedShadowed.js","Constants.js","http/helpers.js","http/api.js","components/richiesta/Richiesta.js","App.js","WidgetElement.js"],"names":["DivWhiteRoundedShadowed","_ref","children","className","style","react_default","a","createElement","Fragment","K","serviceUrl","stato","key","value","prodotto","durata","finalita","periodicita","preammortamento","getDefaultOptions","headers","Headers","Content-Type","request","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","url","options","haveBodyResponse","response","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","status","abrupt","json","Promise","reject","stop","_x","_x2","apply","this","richiestaPostFromForm","api_regeneratorRuntime","richiesta","post","concat","aidaValidation","_ref2","_callee2","cf","_context2","get","_x3","_x4","objectSpread","method","body","JSON","stringify","Richiesta","_useState","useState","_useState2","slicedToArray","setAida","_useState3","_useState4","aidaRes","setAidaRes","cfPivaRegex","Row","Col","md","href","type","id","formik_esm","initialValues","contattoTelefonico","codiceFiscale","nominativoRiferimento","importo","recaptcha","validationSchema","Yup","shape","required","min","max","matches","test","_aidaFunc","Richiesta_regeneratorRuntime","isValidAida","document","activeElement","then","value1","aidaPIva","createError","message","path","when","is","otherwise","onSubmit","fields","console","log","window","location","catch","reason","render","errors","touched","setFieldValue","isValid","handleSubmit","handleBlur","handleChange","values","DivWhiteRoundedShadowed_DivWhiteRoundedShadowed","htmlFor","name","component","react_number_format_es","thousandSeparator","decimalSeparator","decimalScale","onBlur","e","onValueChange","formattedValue","as","map","option","aidaRagioneSociale","aidaPec","disabled","filter","esm","sitekey","onChange","App","Richiesta_Richiesta","ATTRIBUTES","WidgetElement","getAttribute","initServiceUrl","mountPoint","appendChild","ReactDOM","src_App","HTMLElement","customElements","define"],"mappings":"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","file":"static/js/main.1801745b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const DivWhiteRoundedShadowed = ({children, className, style}) => {\r\n\r\n  return (<>\r\n    <div className={'white-rounded-shadowed ' + (className || '')} style={style}>\r\n      {children}\r\n    </div>\r\n  </>)\r\n\r\n}","\r\nexport const K = {\r\n\r\n  serviceUrl : null,\r\n\r\n    stato: [\r\n      {key: 'Prefattbilità' , value: 'PREFATTIBILITA'},\r\n      {key: 'Istruttoria Documentale' , value: 'ISTRUTTORIA_DOCUMENTALE'},\r\n      {key: 'Istruttoria Creditizia',  value: 'ISTRUTTORIA_CREDITIZIA'},\r\n      {key: 'Analisi conclusa' , value: 'ANALISI_CONCLUSA'},\r\n      {key: 'pratica scaduta', value: 'PRATICA_SCADUTA'}\r\n      ],\r\n  prodotto: [\r\n    {key: 'Finanziamento chirografario' , value: 'FINANZIAMENTO_CHIROGRAFARIO'}\r\n  ],\r\n  durata: [\r\n    {key: '60' , value: '60'},\r\n    {key: '72' , value: '72'},\r\n    {key: '84' , value: '84'},\r\n    {key: '96' , value: '96'}\r\n\r\n  ],\r\n  finalita: [\r\n    {key: 'Fornitori' , value: 'FORNITORI'},\r\n    {key: 'Scorte' , value: 'SCORTE'},\r\n    {key: 'Investimenti' , value: 'INVESTIMENTI'}\r\n\r\n  ],\r\n  periodicita: [\r\n    {key: 'Mensile' , value: 'MENSILE'},\r\n    // {key: 'Periodo 2' , value: 'PERIODO_2'},\r\n  ],\r\n  preammortamento: [\r\n    {key: '0' , value: '0'},\r\n    {key: '12' , value: '12'},\r\n    // {key: 'Periodo 2' , value: 'PERIODO_2'},\r\n  ]\r\n};\r\n\r\nexport const initServiceUrl = (serviceUrl) => K.serviceUrl = serviceUrl;\r\n\r\n\r\n","export const getDefaultOptions = () => ({\r\n    headers: new Headers({\r\n        'Content-Type': 'application/json'\r\n    }),\r\n});\r\n\r\n\r\nexport const request = async (url, options, haveBodyResponse = true) => {\r\n    const response = await fetch(url, options);\r\n    if (response.status === 204) {\r\n        return {};\r\n    }\r\n    if (response.status >= 200 && response.status < 300) {\r\n        if (haveBodyResponse) {\r\n            return response.json();\r\n        }\r\n        return {};\r\n    }\r\n\r\n    return Promise.reject(response.status);\r\n};\r\n\r\n","import { getDefaultOptions, request } from './helpers';\r\n\r\nexport const richiestaPostFromForm = async (serviceUrl, richiesta) => {\r\n  return post(`${serviceUrl}/api`, richiesta);\r\n};\r\n\r\nexport const aidaValidation = async (serviceUrl, cf) => {\r\n  return get(`${serviceUrl}/api/richiesta/aida?cf=${cf}`);\r\n};\r\n\r\n\r\nconst get = url => {\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nconst post = (url, body) => {\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: JSON.stringify(body)\r\n  };\r\n  return request(url, options);\r\n};\r\n","import {DivWhiteRoundedShadowed} from '../common/DivWhiteRoundedShadowed';\n\nimport {Col, Row} from 'react-bootstrap';\nimport {K} from '../../Constants';\nimport React, {useState} from 'react';\nimport {aidaValidation, richiestaPostFromForm} from '../../http/api';\nimport {ErrorMessage, Field, Form, Formik} from 'formik';\nimport * as Yup from 'yup';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport  {NumericFormat} from 'react-number-format';\n\nexport const Richiesta = () => {\n\n  const [aida, setAida] = useState();\n  const [aidaRes, setAidaRes] = useState();\n\n\n  // const getValidation = (cf => {\n  //   console.log('validation')\n  //   return aidaValidation(K.serviceUrl, cf)\n  //     .then(value => {\n  //       console.log(value);\n  //       setAida(value);\n  //     })\n  //\n  // })\n\n\n  const phoneRegExp = /^(([+]|00)39)?((3[1-6][0-9]))(\\d{7})$/;\n  const cfPivaRegex = /^[0-9]{11}$/;\n\n\n  return (\n    <>\n      <div className={'align-items-center back-col'}>\n        <div className={\"image-div\"}>\n          <Row>\n            <Col md={6}>\n              <div className={'image-div-content'}>\n                <div className={'align-content-start p-4'}>\n                  <h1 className={'default-color'}>Hai bisogno di un finanziamento?</h1>\n                  <p className={'default-color p-image'}>\n                    {' '}\n                    Compila il modulo sottostante ed in tempo reale ti diremo se la tua richiesta potrà essere\n                    finanziata.{' '}\n                  </p>\n                  <a href=\"#formStart\" type=\"button\" className=\"custom-button-form\">\n                    Compila il form\n                  </a>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </div>\n        <Col md={12}>\n          <div className={'form-div'} id=\"formStart\">\n            <Formik\n              initialValues={{\n                periodicita: '',\n                preammortamento: '',\n                contattoTelefonico: '',\n                codiceFiscale: '',\n                nominativoRiferimento: '',\n                prodotto: '',\n                finalita: '',\n                importo: 0,\n                durata: '',\n                recaptcha: ''\n              }}\n              validationSchema={Yup.object().shape({\n                importo: Yup.number().required('Campo obbligatorio').min(50000, 'Importo non ammissibile').max(300000, 'Importo non ammissibile'),\n                codiceFiscale: Yup.string()\n                  .required('Campo obbligatorio')\n                  .matches(cfPivaRegex, \"Formato non valido\")\n                  .test('codiceFiscale', 'Codice Fiscale o Partita IVA non trovata', async function aidaFunc(value) {\n                     let isValidAida = true;\n                    if (document.activeElement.id === \"codiceFiscale\" && cfPivaRegex.test(value)) {\n                      await aidaValidation(K.serviceUrl, value).then(value1 => {\n                        setAida(undefined)\n                         isValidAida = value1.aidaPIva === value\n                         setAida(value1.aidaPIva === value);\n                        setAidaRes(value1);\n                      })\n                    }\n                    if(isValidAida === false){\n                      return this.createError({ message: `Codice Fiscale o Partita IVA non trovata`,\n                        path: 'codiceFiscale' });\n\n                    }\n                    return isValidAida;\n                  })\n                ,\n                contattoTelefonico: Yup.string().matches(phoneRegExp, 'Numero non valido'),\n                prodotto: Yup.string().required('Campo obbligatorio'),\n                finalita: Yup.string().required('Campo obbligatorio'),\n                durata: Yup.string().when('finalita', {\n                    is: undefined,\n                    then: Yup.string().required(\"Inserire una finalità per scegliere la durata\"),\n                    otherwise: Yup.string().required(\"Campo obbligatorio\"),\n                  }\n                ),\n                periodicita: Yup.string().required('Campo obbligatorio'),\n                preammortamento: Yup.string().required('Campo obbligatorio'),\n                recaptcha: Yup.string().required()\n              })}\n              onSubmit={fields => {\n                console.log(fields);\n                richiestaPostFromForm(K.serviceUrl, fields)\n                  .then(value => {\n                    console.log(value);\n                    window.location.href = '/entando-de-app/en/richiesta_fido_esito.page?id=' + value.id;\n                  })\n                  .catch(reason => console.log(reason));\n              }}\n              render={({\n                         errors,\n                         status,\n                         touched,\n                         isValid,\n                         setFieldValue,\n                         handleSubmit,\n                         handleChange,\n                         handleBlur,\n                         values\n                       }) => (\n                <Form onSubmit={handleSubmit}>\n                  <DivWhiteRoundedShadowed className={'white-div align-content-center'}>\n                    <Row className={'align-to-end'}>\n                      <Col md={1}>\n                        <p className={'from-text-header'}>ANAGRAFICA</p>\n                      </Col>\n                      <Col md={11}>\n                        <p className={'from-text-header'}>*Campi Obbligatori</p>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col>\n                        <div className=\"form-group mb-4\">\n                          <label htmlFor=\"codiceFiscale\">P.IVA/Codice Fiscale*</label>\n                          <Field\n                            id=\"codiceFiscale\"\n                            name=\"codiceFiscale\"\n                            type=\"text\"\n                            className={'form-control' + (errors.codiceFiscale && touched.codiceFiscale ? ' is-invalid' : '')}\n                          />\n                          <ErrorMessage name=\"codiceFiscale\" component=\"div\" className=\"invalid-feedback\"/>\n                        </div>\n                        <div className=\"form-group mb-4\">\n                          <label htmlFor=\"nominativoRiferimento\">Nominativo Riferimento</label>\n                          <Field name=\"nominativoRiferimento\" type=\"text\" className={'form-control'}/>\n                        </div>\n                        <div className=\"form-group mb-4\">\n                          <label htmlFor=\"contattoTelefonico\">Contatto Telefonico</label>\n                          <Field\n                            name=\"contattoTelefonico\"\n                            type=\"phone\"\n                            className={'form-control' + (errors.contattoTelefonico && touched.contattoTelefonico ? ' is-invalid' : '')}\n                          />\n                          <ErrorMessage name=\"contattoTelefonico\" component=\"div\" className=\"invalid-feedback\"/>\n                        </div>\n                        <div className=\"form-group mb-4\">\n                          <label htmlFor=\"importo\">Importo Richiesto*</label>\n                          {/*  type=\"number\"*/}\n                          {/*  onChange={val => val.floatValue}*/}\n                          {/*  className={'form-control' + (errors.importo && touched.importo ? ' is-invalid' : '')}*/}\n\n                          <NumericFormat name=\"importo\"\n                                         thousandSeparator={\".\"}\n                                        decimalSeparator={\"-\"}\n                                         decimalScale={0}\n                                         onBlur={(e) => handleBlur(e)}\n                                         onValueChange={(values) => {\n                                           const { formattedValue, value } = values\n                                           setFieldValue('importo', value)\n                                         }}\n                                         className={'form-control' + (errors.importo && touched.importo ? ' is-invalid' : '')} >\n                          </NumericFormat>\n                          <p className=\"small text-muted\">\n                            Importo minimo 50.000 / Importo massimo 300.000\n                          </p>\n                          <ErrorMessage name=\"importo\" component=\"div\" className=\"invalid-feedback\"/>\n                        </div>\n                        <div className=\"form-group mb-4\">\n                          <label htmlFor=\"finalita\">Finalità*</label>\n                          <Field\n                            as=\"select\"\n                            name=\"finalita\"\n                            className={'form-select' + (errors.finalita && touched.finalita ? ' is-invalid' : '')}\n                          >\n                            <option className={'custom-select-option'} value={''}>\n                              Seleziona una Finalità\n                            </option>\n                            {K.finalita.map(option => (\n                              <option key={option.key} className={'custom-select-option'} value={option.value}>\n                                {option.key}\n                              </option>\n                            ))}\n                          </Field>\n                          <ErrorMessage name=\"finalita\" component=\"div\" className=\"invalid-feedback\"/>\n                        </div>\n                      </Col>\n                      <Col>\n                        <div >\n                          <p>Ragione Sociale : {!errors.codiceFiscale && aidaRes && aidaRes.aidaRagioneSociale}</p>\n                          <p>Pec : {!errors.codiceFiscale && aidaRes && aidaRes.aidaPec}</p>\n                        </div>\n                        <div className=\"form-group mb-4\">\n                          <label htmlFor=\"prodotto\">Prodotto*</label>\n                          <Field\n                            as=\"select\"\n                            name=\"prodotto\"\n                            className={'form-select' + (errors.prodotto && touched.prodotto ? ' is-invalid' : '')}\n                          >\n                            <option className={'custom-select-option'} value={''}>\n                              Seleziona un Prodotto\n                            </option>\n                            {K.prodotto.map(option => (\n                              <option key={option.key} className={'custom-select-option'} value={option.value}>\n                                {option.key}\n                              </option>\n                            ))}\n                          </Field>\n                          <ErrorMessage name=\"prodotto\" component=\"div\" className=\"invalid-feedback\"/>\n                        </div>\n                        <div className=\"form-group mb-4\">\n                          <label htmlFor=\"durata\">Durata* </label>\n                          <Field\n                            as=\"select\"\n                            name=\"durata\"\n                            className={'form-select' + (errors.durata && touched.durata ? ' is-invalid' : '')}\n                          >\n                            <option className={'custom-select-option'} value={''}\n                                    disabled={values.finalita === undefined || values.finalita === ''}>\n                              Seleziona una Durata\n                            </option>\n                            {values.finalita === \"INVESTIMENTI\" ? K.durata.map(option => (\n                                <option key={option.key} className={'custom-select-option'} value={option.value}\n                                        disabled={values.finalita === undefined || values.finalita === ''}>\n                                  {option.key}\n                                </option>\n                              )) :\n                              values.finalita !== \"INVESTIMENTI\" && K.durata.filter(value => value.value === '60').map(option => (\n                                <option key={option.key} className={'custom-select-option'} value={option.value}\n                                        disabled={values.finalita === undefined || values.finalita === ''}>\n                                  {option.key}\n                                </option>\n                              ))}\n                          </Field>\n                          <ErrorMessage name=\"durata\" component=\"div\" className=\"invalid-feedback\"/>\n                        </div>\n                        <div className=\"form-group mb-4\">\n                          <label htmlFor=\"preammortamento\">Preammortamento*</label>\n                          <Field\n                            as=\"select\"\n                            name=\"preammortamento\"\n                            className={'form-select' + (errors.preammortamento && touched.preammortamento ? ' is-invalid' : '')}\n                          >\n                            <option className={'custom-select-option'} value={''}>\n                              Seleziona Preammortamento\n                            </option>\n                            {K.preammortamento.map(option => (\n                              <option key={option.key} className={'custom-select-option'} value={option.value}>\n                                {option.key}\n                              </option>\n                            ))}\n                          </Field>\n                          <ErrorMessage name=\"preammortamento\" component=\"div\" className=\"invalid-feedback\"/>\n                        </div>\n                        <div className=\"form-group custom-margin\">\n                          <label htmlFor=\"periodicita\">Periodicità*</label>\n                          <Field\n                            as=\"select\"\n                            name=\"periodicita\"\n                            className={'form-select' + (errors.periodicita && touched.periodicita ? ' is-invalid' : '')}\n                          >\n                            <option className={'custom-select-option'} value={''}>\n                              Seleziona una Periodicità\n                            </option>\n\n                            {K.periodicita.map(option => (\n                              <option key={option.key} className={'custom-select-option'} value={option.value}>\n                                {option.key}\n                              </option>\n                            ))}\n                          </Field>\n                          <ErrorMessage name=\"periodicita\" component=\"div\" className=\"invalid-feedback\"/>\n                        </div>\n                      </Col>\n                    </Row>\n                  </DivWhiteRoundedShadowed>\n                  {/*6LdFHCshAAAAAGqnoDlJRYgjNWnL-DSRAiesUwbx*/}\n                  <div className=\"text-xs-end\">\n                    <ReCAPTCHA\n                      className={errors.recaptcha && touched.recaptcha ? 'rec-div-invalid' : 'rec-div'}\n                      sitekey=\"6LdP908iAAAAAAyZ8deXI2VsUkchMhGgVB8w4gR0\"\n                      render=\"explicit\"\n                      onChange={response => {\n                        setFieldValue('recaptcha', response);\n                      }}\n                    />\n                    {errors.recaptcha && touched.recaptcha && <p>Verifica obbligatoria</p>}\n                    {/*<div className=\"g-recaptcha\" data-sitekey=\"6LdFHCshAAAAAPA70VJk5T9LC8XzzemwybZ0r7Oj\"/>*/}\n                  </div>\n\n                  <Row>\n                    <Col className={'align-to-end mt-2'}>\n                      <button type=\"submit\" className=\"custom-button-richiesta\">\n                        {' '}\n                        Invia la tua richiesta\n                      </button>\n                    </Col>\n                  </Row>\n                </Form>\n              )}\n            />\n          </div>\n        </Col>\n      </div>\n    </>\n  );\n};\n","import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Richiesta} from \"./components/richiesta/Richiesta\";\r\nimport React, { Component }  from 'react';\r\n\r\nfunction App() {\r\n\r\n  // const { keycloak, initialized } = useKeycloak()\r\n  // if (keycloak.authenticated) {\r\n  //   initApplicationConstants();\r\n  //   checkNewUser();\r\n  // }\r\n\r\n  return (\r\n   <Richiesta/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {initServiceUrl} from \"./Constants\";\r\n\r\n\r\nconst ATTRIBUTES = {\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass WidgetElement extends HTMLElement {\r\n\r\n  static get observedAttributes() {\r\n    return Object.values(ATTRIBUTES);\r\n  }\r\n\r\n  connectedCallback() {\r\n    const serviceUrl = this.getAttribute(\"service-url\")\r\n    initServiceUrl(serviceUrl);\r\n\r\n    this.mountPoint = document.createElement('div');\r\n    this.appendChild(this.mountPoint);\r\n\r\n    ReactDOM.render(<App serviceUrl={serviceUrl}/>, this.mountPoint);\r\n  }\r\n}\r\n\r\n\r\ncustomElements.define('richiesta-widget', WidgetElement);\r\n\r\nexport default WidgetElement;\r\n\r\n"],"sourceRoot":""}