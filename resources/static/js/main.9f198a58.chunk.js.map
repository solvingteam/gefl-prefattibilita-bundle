{"version":3,"sources":["components/common/DivWhiteRoundedShadowed.js","Constants.js","http/helpers.js","http/api.js","components/richiesta/Richiesta.js","App.js","WidgetElement.js"],"names":["DivWhiteRoundedShadowed","_ref","children","className","style","react_default","a","createElement","Fragment","K","serviceUrl","stato","key","value","prodotto","durata","finalita","periodicita","preammortamento","getDefaultOptions","headers","Headers","Content-Type","request","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","url","options","haveBodyResponse","response","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","status","abrupt","json","Promise","reject","stop","_x","_x2","apply","this","richiestaPostFromForm","api_regeneratorRuntime","richiesta","post","concat","aidaValidation","_ref2","_callee2","cf","_context2","get","_x3","_x4","objectSpread","method","body","JSON","stringify","Richiesta","_useState","useState","_useState2","slicedToArray","setAida","_useState3","_useState4","aidaRes","setAidaRes","cfPivaRegex","Row","Col","md","href","type","id","formik_esm","initialValues","contattoTelefonico","codiceFiscale","nominativoRiferimento","importo","recaptcha","validationSchema","Yup","shape","required","min","max","ragioneSociale","pec","email","matches","test","_aidaFunc","Richiesta_regeneratorRuntime","isValidAida","document","activeElement","then","value1","aidaPIva","createError","message","path","when","is","otherwise","onSubmit","fields","console","log","window","location","catch","reason","render","errors","touched","setFieldValue","isValid","handleSubmit","handleBlur","handleChange","values","DivWhiteRoundedShadowed_DivWhiteRoundedShadowed","htmlFor","name","component","react_number_format_es","thousandSeparator","decimalSeparator","onBlur","e","onValueChange","formattedValue","as","map","option","aidaRagioneSociale","aidaPec","disabled","filter","esm","sitekey","onChange","App","Richiesta_Richiesta","ATTRIBUTES","WidgetElement","getAttribute","initServiceUrl","mountPoint","appendChild","ReactDOM","src_App","HTMLElement","customElements","define"],"mappings":"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","file":"static/js/main.9f198a58.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const DivWhiteRoundedShadowed = ({children, className, style}) => {\r\n\r\n  return (<>\r\n    <div className={'white-rounded-shadowed ' + (className || '')} style={style}>\r\n      {children}\r\n    </div>\r\n  </>)\r\n\r\n}","\r\nexport const K = {\r\n\r\n  serviceUrl : null,\r\n\r\n    stato: [\r\n      {key: 'Prefattbilità' , value: 'PREFATTIBILITA'},\r\n      {key: 'Istruttoria Documentale' , value: 'ISTRUTTORIA_DOCUMENTALE'},\r\n      {key: 'Istruttoria Creditizia',  value: 'ISTRUTTORIA_CREDITIZIA'},\r\n      {key: 'Analisi conclusa' , value: 'ANALISI_CONCLUSA'},\r\n      {key: 'pratica scaduta', value: 'PRATICA_SCADUTA'}\r\n      ],\r\n  prodotto: [\r\n    {key: 'Finanziamento chirografario' , value: 'FINANZIAMENTO_CHIROGRAFARIO'}\r\n  ],\r\n  durata: [\r\n    {key: '60' , value: '60'},\r\n    {key: '72' , value: '72'},\r\n    {key: '84' , value: '84'},\r\n    {key: '96' , value: '96'}\r\n\r\n  ],\r\n  finalita: [\r\n    {key: 'Fornitori' , value: 'FORNITORI'},\r\n    {key: 'Scorte' , value: 'SCORTE'},\r\n    {key: 'Investimenti' , value: 'INVESTIMENTI'}\r\n\r\n  ],\r\n  periodicita: [\r\n    {key: 'Mensile' , value: 'MENSILE'},\r\n    // {key: 'Periodo 2' , value: 'PERIODO_2'},\r\n  ],\r\n  preammortamento: [\r\n    {key: '0' , value: '0'},\r\n    {key: '12' , value: '12'},\r\n    // {key: 'Periodo 2' , value: 'PERIODO_2'},\r\n  ]\r\n};\r\n\r\nexport const initServiceUrl = (serviceUrl) => K.serviceUrl = serviceUrl;\r\n\r\n\r\n","export const getDefaultOptions = () => ({\r\n    headers: new Headers({\r\n        'Content-Type': 'application/json'\r\n    }),\r\n});\r\n\r\n\r\nexport const request = async (url, options, haveBodyResponse = true) => {\r\n    const response = await fetch(url, options);\r\n    if (response.status === 204) {\r\n        return {};\r\n    }\r\n    if (response.status >= 200 && response.status < 300) {\r\n        if (haveBodyResponse) {\r\n            return response.json();\r\n        }\r\n        return {};\r\n    }\r\n\r\n    return Promise.reject(response.status);\r\n};\r\n\r\n","import { getDefaultOptions, request } from './helpers';\r\n\r\nexport const richiestaPostFromForm = async (serviceUrl, richiesta) => {\r\n  return post(`${serviceUrl}/api`, richiesta);\r\n};\r\n\r\nexport const aidaValidation = async (serviceUrl, cf) => {\r\n  return get(`${serviceUrl}/api/richiesta/aida?cf=${cf}`);\r\n};\r\n\r\n\r\nconst get = url => {\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nconst post = (url, body) => {\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: JSON.stringify(body)\r\n  };\r\n  return request(url, options);\r\n};\r\n","import {DivWhiteRoundedShadowed} from '../common/DivWhiteRoundedShadowed';\r\n\r\nimport {Col, Row} from 'react-bootstrap';\r\nimport {K} from '../../Constants';\r\nimport React, {useState} from 'react';\r\nimport {aidaValidation, richiestaPostFromForm} from '../../http/api';\r\nimport {ErrorMessage, Field, Form, Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ReCAPTCHA from 'react-google-recaptcha';\r\nimport  {NumericFormat} from 'react-number-format';\r\n\r\nexport const Richiesta = () => {\r\n\r\n  const [aida, setAida] = useState();\r\n  const [aidaRes, setAidaRes] = useState();\r\n\r\n\r\n  // const getValidation = (cf => {\r\n  //   console.log('validation')\r\n  //   return aidaValidation(K.serviceUrl, cf)\r\n  //     .then(value => {\r\n  //       console.log(value);\r\n  //       setAida(value);\r\n  //     })\r\n  //\r\n  // })\r\n\r\n\r\n  const phoneRegExp = /^(([+]|00)39)?((3[1-6][0-9]))(\\d{7})$/;\r\n  const cfPivaRegex = /^[0-9]{11}$/;\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className={'align-items-center back-col'}>\r\n        <div className={\"image-div\"}>\r\n          <Row>\r\n            <Col md={6}>\r\n              <div className={'image-div-content'}>\r\n                <div className={'align-content-start p-4'}>\r\n                  <h1 className={'default-color'}>Hai bisogno di un finanziamento?</h1>\r\n                  <p className={'default-color p-image'}>\r\n                    {' '}\r\n                    Compila il modulo sottostante ed in tempo reale ti diremo se la tua richiesta potrà essere\r\n                    finanziata.{' '}\r\n                  </p>\r\n                  <a href=\"#formStart\" type=\"button\" className=\"custom-button-form\">\r\n                    Compila il form\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <Col md={12}>\r\n          <div className={'form-div'} id=\"formStart\">\r\n            <Formik\r\n              initialValues={{\r\n                // pec: '',\r\n                periodicita: '',\r\n                preammortamento: '',\r\n                contattoTelefonico: '',\r\n                codiceFiscale: '',\r\n                nominativoRiferimento: '',\r\n                prodotto: '',\r\n                // ragioneSociale: '',\r\n                finalita: '',\r\n                importo: 0,\r\n                durata: '',\r\n                recaptcha: ''\r\n              }}\r\n              validationSchema={Yup.object().shape({\r\n                importo: Yup.number().required('Campo obbligatorio').min(50000, 'Importo non ammissibile').max(300000, 'Importo non ammissibile'),\r\n                // ragioneSociale: Yup.string().required('Campo obbligatorio'),\r\n                // pec: Yup.string()\r\n                //   .email('PEC non valida')\r\n                //   .required('PEC obbligatoria'),\r\n                ragioneSociale: Yup.string().required('Campo obbligatorio'),\r\n                pec: Yup.string()\r\n                  .email('PEC non valida')\r\n                  .required('PEC obbligatoria'),\r\n                codiceFiscale: Yup.string()\r\n                  .required('Campo obbligatorio')\r\n                  .matches(cfPivaRegex, \"Formato non valido\")\r\n                  .test('codiceFiscale', 'Codice Fiscale o Partita IVA non trovata', async function aidaFunc(value) {\r\n                     let isValidAida = true;\r\n                    if (document.activeElement.id === \"codiceFiscale\" && cfPivaRegex.test(value)) {\r\n                      await aidaValidation(K.serviceUrl, value).then(value1 => {\r\n                        setAida(undefined)\r\n                         isValidAida = value1.aidaPIva === value\r\n                         setAida(value1.aidaPIva === value);\r\n                        setAidaRes(value1);\r\n                      })\r\n                    }\r\n                    if(isValidAida === false){\r\n                      return this.createError({ message: `Codice Fiscale o Partita IVA non trovata`,\r\n                        path: 'codiceFiscale' });\r\n\r\n                    }\r\n                    return isValidAida;\r\n                  })\r\n                ,\r\n                contattoTelefonico: Yup.string().matches(phoneRegExp, 'Numero non valido'),\r\n                prodotto: Yup.string().required('Campo obbligatorio'),\r\n                finalita: Yup.string().required('Campo obbligatorio'),\r\n                durata: Yup.string().when('finalita', {\r\n                    is: undefined,\r\n                    then: Yup.string().required(\"Inserire una finalità per scegliere la durata\"),\r\n                    otherwise: Yup.string().required(\"Campo obbligatorio\"),\r\n                  }\r\n                ),\r\n                periodicita: Yup.string().required('Campo obbligatorio'),\r\n                preammortamento: Yup.string().required('Campo obbligatorio'),\r\n                recaptcha: Yup.string().required()\r\n              })}\r\n              onSubmit={fields => {\r\n                console.log(fields);\r\n                richiestaPostFromForm(K.serviceUrl, fields)\r\n                  .then(value => {\r\n                    console.log(value);\r\n                    window.location.href = '/entando-de-app/en/richiesta_fido_esito.page?id=' + value.id;\r\n                  })\r\n                  .catch(reason => console.log(reason));\r\n              }}\r\n              render={({\r\n                         errors,\r\n                         status,\r\n                         touched,\r\n                         isValid,\r\n                         setFieldValue,\r\n                         handleSubmit,\r\n                         handleChange,\r\n                         handleBlur,\r\n                         values\r\n                       }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                  <DivWhiteRoundedShadowed className={'white-div align-content-center'}>\r\n                    <Row className={'align-to-end'}>\r\n                      <Col md={1}>\r\n                        <p className={'from-text-header'}>ANAGRAFICA</p>\r\n                      </Col>\r\n                      <Col md={11}>\r\n                        <p className={'from-text-header'}>*Campi Obbligatori</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"codiceFiscale\">P.IVA/Codice Fiscale*</label>\r\n                          <Field\r\n                            id=\"codiceFiscale\"\r\n                            name=\"codiceFiscale\"\r\n                            type=\"text\"\r\n                            className={'form-control' + (errors.codiceFiscale && touched.codiceFiscale ? ' is-invalid' : '')}\r\n                          />\r\n                          <ErrorMessage name=\"codiceFiscale\" component=\"div\" className=\"invalid-feedback\"/>\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"nominativoRiferimento\">Nominativo Riferimento</label>\r\n                          <Field name=\"nominativoRiferimento\" type=\"text\" className={'form-control'}/>\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"contattoTelefonico\">Contatto Telefonico</label>\r\n                          <Field\r\n                            name=\"contattoTelefonico\"\r\n                            type=\"phone\"\r\n                            className={'form-control' + (errors.contattoTelefonico && touched.contattoTelefonico ? ' is-invalid' : '')}\r\n                          />\r\n                          <ErrorMessage name=\"contattoTelefonico\" component=\"div\" className=\"invalid-feedback\"/>\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"importo\">Importo Richiesto*</label>\r\n                          {/*  type=\"number\"*/}\r\n                          {/*  onChange={val => val.floatValue}*/}\r\n                          {/*  className={'form-control' + (errors.importo && touched.importo ? ' is-invalid' : '')}*/}\r\n\r\n                          <NumericFormat name=\"importo\"\r\n                                         thousandSeparator={\".\"}\r\n                                         decimalSeparator={\",\"}\r\n                                         onBlur={(e) => handleBlur(e)}\r\n                                         onValueChange={(values) => {\r\n                                           const { formattedValue, value } = values\r\n                                           setFieldValue('importo', value)\r\n                                         }}\r\n                                         className={'form-control' + (errors.importo && touched.importo ? ' is-invalid' : '')} >\r\n                          </NumericFormat>\r\n                          <p className=\"small text-muted\">\r\n                            Importo minimo 50.000 / Importo massimo 300.000\r\n                          </p>\r\n                          <ErrorMessage name=\"importo\" component=\"div\" className=\"invalid-feedback\"/>\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"finalita\">Finalità*</label>\r\n                          <Field\r\n                            as=\"select\"\r\n                            name=\"finalita\"\r\n                            className={'form-select' + (errors.finalita && touched.finalita ? ' is-invalid' : '')}\r\n                          >\r\n                            <option className={'custom-select-option'} value={''}>\r\n                              Seleziona una Finalità\r\n                            </option>\r\n                            {K.finalita.map(option => (\r\n                              <option key={option.key} className={'custom-select-option'} value={option.value}>\r\n                                {option.key}\r\n                              </option>\r\n                            ))}\r\n                          </Field>\r\n                          <ErrorMessage name=\"finalita\" component=\"div\" className=\"invalid-feedback\"/>\r\n                        </div>\r\n                      </Col>\r\n                      <Col>\r\n                        <div >\r\n                          <p>Ragione Sociale : {!errors.codiceFiscale && aidaRes && aidaRes.aidaRagioneSociale}</p>\r\n                          <p>Pec : {!errors.codiceFiscale && aidaRes && aidaRes.aidaPec}</p>\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"prodotto\">Prodotto*</label>\r\n                          <Field\r\n                            as=\"select\"\r\n                            name=\"prodotto\"\r\n                            className={'form-select' + (errors.prodotto && touched.prodotto ? ' is-invalid' : '')}\r\n                          >\r\n                            <option className={'custom-select-option'} value={''}>\r\n                              Seleziona un Prodotto\r\n                            </option>\r\n                            {K.prodotto.map(option => (\r\n                              <option key={option.key} className={'custom-select-option'} value={option.value}>\r\n                                {option.key}\r\n                              </option>\r\n                            ))}\r\n                          </Field>\r\n                          <ErrorMessage name=\"prodotto\" component=\"div\" className=\"invalid-feedback\"/>\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"durata\">Durata* </label>\r\n                          <Field\r\n                            as=\"select\"\r\n                            name=\"durata\"\r\n                            className={'form-select' + (errors.durata && touched.durata ? ' is-invalid' : '')}\r\n                          >\r\n                            <option className={'custom-select-option'} value={''}\r\n                                    disabled={values.finalita === undefined || values.finalita === ''}>\r\n                              Seleziona una Durata\r\n                            </option>\r\n                            {values.finalita === \"INVESTIMENTI\" ? K.durata.map(option => (\r\n                                <option key={option.key} className={'custom-select-option'} value={option.value}\r\n                                        disabled={values.finalita === undefined || values.finalita === ''}>\r\n                                  {option.key}\r\n                                </option>\r\n                              )) :\r\n                              values.finalita !== \"INVESTIMENTI\" && K.durata.filter(value => value.value === '60').map(option => (\r\n                                <option key={option.key} className={'custom-select-option'} value={option.value}\r\n                                        disabled={values.finalita === undefined || values.finalita === ''}>\r\n                                  {option.key}\r\n                                </option>\r\n                              ))}\r\n                          </Field>\r\n                          <ErrorMessage name=\"durata\" component=\"div\" className=\"invalid-feedback\"/>\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"preammortamento\">Preammortamento*</label>\r\n                          <Field\r\n                            as=\"select\"\r\n                            name=\"preammortamento\"\r\n                            className={'form-select' + (errors.preammortamento && touched.preammortamento ? ' is-invalid' : '')}\r\n                          >\r\n                            <option className={'custom-select-option'} value={''}>\r\n                              Seleziona Preammortamento\r\n                            </option>\r\n                            {K.preammortamento.map(option => (\r\n                              <option key={option.key} className={'custom-select-option'} value={option.value}>\r\n                                {option.key}\r\n                              </option>\r\n                            ))}\r\n                          </Field>\r\n                          <ErrorMessage name=\"preammortamento\" component=\"div\" className=\"invalid-feedback\"/>\r\n                        </div>\r\n                        <div className=\"form-group custom-margin\">\r\n                          <label htmlFor=\"periodicita\">Periodicità*</label>\r\n                          <Field\r\n                            as=\"select\"\r\n                            name=\"periodicita\"\r\n                            className={'form-select' + (errors.periodicita && touched.periodicita ? ' is-invalid' : '')}\r\n                          >\r\n                            <option className={'custom-select-option'} value={''}>\r\n                              Seleziona una Periodicità\r\n                            </option>\r\n\r\n                            {K.periodicita.map(option => (\r\n                              <option key={option.key} className={'custom-select-option'} value={option.value}>\r\n                                {option.key}\r\n                              </option>\r\n                            ))}\r\n                          </Field>\r\n                          <ErrorMessage name=\"periodicita\" component=\"div\" className=\"invalid-feedback\"/>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </DivWhiteRoundedShadowed>\r\n                  {/*6LdFHCshAAAAAGqnoDlJRYgjNWnL-DSRAiesUwbx*/}\r\n                  <div className=\"text-xs-end\">\r\n                    <ReCAPTCHA\r\n                      className={errors.recaptcha && touched.recaptcha ? 'rec-div-invalid' : 'rec-div'}\r\n                      sitekey=\"6LdP908iAAAAAAyZ8deXI2VsUkchMhGgVB8w4gR0\"\r\n                      render=\"explicit\"\r\n                      onChange={response => {\r\n                        setFieldValue('recaptcha', response);\r\n                      }}\r\n                    />\r\n                    {errors.recaptcha && touched.recaptcha && <p>Verifica obbligatoria</p>}\r\n                    {/*<div className=\"g-recaptcha\" data-sitekey=\"6LdFHCshAAAAAPA70VJk5T9LC8XzzemwybZ0r7Oj\"/>*/}\r\n                  </div>\r\n\r\n                  <Row>\r\n                    <Col className={'align-to-end mt-2'}>\r\n                      <button type=\"submit\" className=\"custom-button-richiesta\">\r\n                        {' '}\r\n                        Invia la tua richiesta\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Richiesta} from \"./components/richiesta/Richiesta\";\r\nimport React, { Component }  from 'react';\r\n\r\nfunction App() {\r\n\r\n  // const { keycloak, initialized } = useKeycloak()\r\n  // if (keycloak.authenticated) {\r\n  //   initApplicationConstants();\r\n  //   checkNewUser();\r\n  // }\r\n\r\n  return (\r\n   <Richiesta/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {initServiceUrl} from \"./Constants\";\r\n\r\n\r\nconst ATTRIBUTES = {\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass WidgetElement extends HTMLElement {\r\n\r\n  static get observedAttributes() {\r\n    return Object.values(ATTRIBUTES);\r\n  }\r\n\r\n  connectedCallback() {\r\n    const serviceUrl = this.getAttribute(\"service-url\")\r\n    initServiceUrl(serviceUrl);\r\n\r\n    this.mountPoint = document.createElement('div');\r\n    this.appendChild(this.mountPoint);\r\n\r\n    ReactDOM.render(<App serviceUrl={serviceUrl}/>, this.mountPoint);\r\n  }\r\n}\r\n\r\n\r\ncustomElements.define('richiesta-widget', WidgetElement);\r\n\r\nexport default WidgetElement;\r\n\r\n"],"sourceRoot":""}