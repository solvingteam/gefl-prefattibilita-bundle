{"version":3,"sources":["components/common/DivWhiteRoundedShadowed.js","Constants.js","http/helpers.js","http/api.js","components/richiesta/Richiesta.js","App.js","WidgetElement.js"],"names":["DivWhiteRoundedShadowed","_ref","children","className","style","react_default","a","createElement","Fragment","K","serviceUrl","stato","key","value","prodotto","durata","finalita","periodicita","preammortamento","getDefaultOptions","headers","Headers","Content-Type","request","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","url","options","haveBodyResponse","response","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","status","abrupt","json","Promise","reject","stop","_x","_x2","apply","this","richiestaPostFromForm","api_regeneratorRuntime","richiesta","post","concat","body","objectSpread","method","JSON","stringify","Richiesta","Row","Col","md","href","type","id","formik_esm","initialValues","pec","contattoTelefonico","codiceFiscale","nominativoRiferimento","ragioneSociale","importo","recaptcha","validationSchema","Yup","shape","required","min","max","email","matches","when","is","then","otherwise","onSubmit","fields","console","log","window","location","catch","reason","render","errors","touched","handleBlur","isValid","setFieldValue","handleSubmit","values","DivWhiteRoundedShadowed_DivWhiteRoundedShadowed","htmlFor","name","component","react_number_format_es","thousandSeparator","decimalSeparator","onBlur","e","onValueChange","formattedValue","as","map","option","disabled","filter","esm","sitekey","onChange","App","Richiesta_Richiesta","ATTRIBUTES","WidgetElement","getAttribute","initServiceUrl","mountPoint","document","appendChild","ReactDOM","src_App","HTMLElement","customElements","define"],"mappings":"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","file":"static/js/main.2ac097f4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const DivWhiteRoundedShadowed = ({children, className, style}) => {\r\n\r\n  return (<>\r\n    <div className={'white-rounded-shadowed ' + (className || '')} style={style}>\r\n      {children}\r\n    </div>\r\n  </>)\r\n\r\n}","\r\nexport const K = {\r\n\r\n  serviceUrl : null,\r\n\r\n    stato: [\r\n      {key: 'Prefattbilità' , value: 'PREFATTIBILITA'},\r\n      {key: 'Istruttoria Documentale' , value: 'ISTRUTTORIA_DOCUMENTALE'},\r\n      {key: 'Istruttoria Creditizia',  value: 'ISTRUTTORIA_CREDITIZIA'},\r\n      {key: 'Analisi conclusa' , value: 'ANALISI_CONCLUSA'},\r\n      {key: 'pratica scaduta', value: 'PRATICA_SCADUTA'}\r\n      ],\r\n  prodotto: [\r\n    {key: 'Finanziamento chirografario' , value: 'FINANZIAMENTO_CHIROGRAFARIO'}\r\n  ],\r\n  durata: [\r\n    {key: '60' , value: '60'},\r\n    {key: '72' , value: '72'},\r\n    {key: '84' , value: '84'},\r\n    {key: '96' , value: '96'}\r\n\r\n  ],\r\n  finalita: [\r\n    {key: 'Fornitori' , value: 'FORNITORI'},\r\n    {key: 'Scorte' , value: 'SCORTE'},\r\n    {key: 'Investimenti' , value: 'INVESTIMENTI'}\r\n\r\n  ],\r\n  periodicita: [\r\n    {key: 'Mensile' , value: 'MENSILE'},\r\n    // {key: 'Periodo 2' , value: 'PERIODO_2'},\r\n  ],\r\n  preammortamento: [\r\n    {key: '0' , value: '0'},\r\n    {key: '12' , value: '12'},\r\n    // {key: 'Periodo 2' , value: 'PERIODO_2'},\r\n  ]\r\n};\r\n\r\nexport const initServiceUrl = (serviceUrl) => K.serviceUrl = serviceUrl;\r\n\r\n\r\n","export const getDefaultOptions = () => ({\r\n    headers: new Headers({\r\n        'Content-Type': 'application/json'\r\n    }),\r\n});\r\n\r\n\r\nexport const request = async (url, options, haveBodyResponse = true) => {\r\n    const response = await fetch(url, options);\r\n    if (response.status === 204) {\r\n        return {};\r\n    }\r\n    if (response.status >= 200 && response.status < 300) {\r\n        if (haveBodyResponse) {\r\n            return response.json();\r\n        }\r\n        return {};\r\n    }\r\n\r\n    return Promise.reject(response.status);\r\n};\r\n\r\n","import { getDefaultOptions, request } from './helpers';\n\nexport const richiestaPostFromForm = async (serviceUrl, richiesta) => {\n  return post(`${serviceUrl}/api`, richiesta);\n};\n\nconst get = url => {\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET'\n  };\n  return request(url, options);\n};\n\nconst post = (url, body) => {\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: JSON.stringify(body)\n  };\n  return request(url, options);\n};\n","import { DivWhiteRoundedShadowed } from '../common/DivWhiteRoundedShadowed';\r\n\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { K } from '../../Constants';\r\nimport React from 'react';\r\nimport { richiestaPostFromForm } from '../../http/api';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ReCAPTCHA from 'react-google-recaptcha';\r\nimport  {NumericFormat} from 'react-number-format';\r\n\r\nexport const Richiesta = () => {\r\n  const handleChange = value => {\r\n    console.log('Captcha value:', value);\r\n  };\r\n\r\n  const phoneRegExp = /^(([+]|00)39)?((3[1-6][0-9]))(\\d{7})$/;\r\n  const cfPivaRegex = /(^[A-Za-z]{6}[0-9LMNPQRSTUV]{2}[A-Za-z]{1}[0-9LMNPQRSTUV]{2}[A-Za-z]{1}[0-9LMNPQRSTUV]{3}[A-Za-z]{1})|(^[0-9]{11})$/;\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className={'align-items-center back-col'}>\r\n        <div className={\"image-div\"}>\r\n          <Row>\r\n            <Col md={6}>\r\n              <div className={'image-div-content'}>\r\n                <div className={'align-content-start p-4'}>\r\n                  <h1 className={'default-color'}>Hai bisogno di un finanziamento?</h1>\r\n                  <p className={'default-color p-image'}>\r\n                    {' '}\r\n                    Compila il modulo sottostante ed in tempo reale ti diremo se la tua richiesta potrà essere finanziata.{' '}\r\n                  </p>\r\n                  <a href=\"#formStart\" type=\"button\" className=\"custom-button-form\">\r\n                    Compila il form\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <Col md={12}>\r\n          <div className={'form-div'} id=\"formStart\">\r\n            <Formik\r\n              initialValues={{\r\n                pec: '',\r\n                periodicita: '',\r\n                preammortamento: '',\r\n                contattoTelefonico: '',\r\n                codiceFiscale: '',\r\n                nominativoRiferimento: '',\r\n                prodotto: '',\r\n                ragioneSociale: '',\r\n                finalita: '',\r\n                importo: 0,\r\n                durata: '',\r\n                recaptcha: ''\r\n              }}\r\n              validationSchema={Yup.object().shape({\r\n                importo: Yup.number().required(\"Campo obbligatorio\").min(50000, 'Importo non ammissibile').max(300000, 'Importo non ammissibile'),\r\n                ragioneSociale: Yup.string().required('Campo obbligatorio'),\r\n                pec: Yup.string()\r\n                  .email('PEC non valida')\r\n                  .required('PEC obbligatoria'),\r\n                codiceFiscale: Yup.string()\r\n                  .matches(cfPivaRegex, 'Codice Fiscale o Partita IVA non valida')\r\n                  .required('Campo obbligatorio'),\r\n                contattoTelefonico: Yup.string().matches(phoneRegExp, 'Numero non valido'),\r\n                prodotto: Yup.string().required('Campo obbligatorio'),\r\n                finalita: Yup.string().required('Campo obbligatorio'),\r\n                durata: Yup.string().when('finalita', {\r\n                  is: undefined,\r\n                  then: Yup.string().required(\"Inserire una finalità per scegliere la durata\"),\r\n                  otherwise: Yup.string().required(\"Campo obbligatorio\"),\r\n                  }\r\n                ),\r\n                periodicita: Yup.string().required('Campo obbligatorio'),\r\n                preammortamento: Yup.string().required('Campo obbligatorio'),\r\n                recaptcha: Yup.string().required()\r\n              })}\r\n              onSubmit={fields => {\r\n                console.log(fields);\r\n                richiestaPostFromForm(K.serviceUrl, fields)\r\n                  .then(value => {\r\n                    console.log(value);\r\n                    window.location.href = '/entando-de-app/en/richiesta_fido_esito.page?id=' + value.id;\r\n                  })\r\n                  .catch(reason => console.log(reason));\r\n              }}\r\n              render={({ errors, status, touched, isValid, handleBlur, setFieldValue, handleSubmit, values}) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                  <DivWhiteRoundedShadowed className={'white-div align-content-center'}>\r\n                    <Row className={'align-to-end'}>\r\n                      <Col md={1}>\r\n                        <p className={'from-text-header'}>ANAGRAFICA</p>\r\n                      </Col>\r\n                      <Col md={11}>\r\n                        <p className={'from-text-header'}>*Campi Obbligatori</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"ragioneSociale\">Ragione Sociale*</label>\r\n                          <Field\r\n                            name=\"ragioneSociale\"\r\n                            type=\"text\"\r\n                            className={'form-control' + (errors.ragioneSociale && touched.ragioneSociale ? ' is-invalid' : '')}\r\n                          />\r\n                          <ErrorMessage name=\"ragioneSociale\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"pec\">Pec*</label>\r\n                          <Field name=\"pec\" type=\"text\" className={'form-control' + (errors.pec && touched.pec ? ' is-invalid' : '')} />\r\n                          <ErrorMessage name=\"pec\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"contattoTelefonico\">Contatto Telefonico</label>\r\n                          <Field\r\n                            name=\"contattoTelefonico\"\r\n                            type=\"phone\"\r\n                            className={'form-control' + (errors.contattoTelefonico && touched.contattoTelefonico ? ' is-invalid' : '')}\r\n                          />\r\n                          <ErrorMessage name=\"contattoTelefonico\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"importo\">Importo Richiesto*</label>\r\n                          {/*  type=\"number\"*/}\r\n                          {/*  onChange={val => val.floatValue}*/}\r\n                          {/*  className={'form-control' + (errors.importo && touched.importo ? ' is-invalid' : '')}*/}\r\n\r\n                          <NumericFormat name=\"importo\"\r\n                                         thousandSeparator={\".\"}\r\n                                         decimalSeparator={\",\"}\r\n                                         onBlur={(e) => handleBlur(e)}\r\n                                         onValueChange={(values) => {\r\n                                           const { formattedValue, value } = values\r\n                                           setFieldValue('importo', value)\r\n                                         }}\r\n                                         className={'form-control' + (errors.importo && touched.importo ? ' is-invalid' : '')} >\r\n                          </NumericFormat>\r\n                          <p className=\"small text-muted\">\r\n                            Importo minimo 50.000 / Importo massimo 300.000\r\n                          </p>\r\n                          <ErrorMessage name=\"importo\" component=\"div\" className=\"invalid-feedback\"/>\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"finalita\">Finalità*</label>\r\n                          <Field\r\n                            as=\"select\"\r\n                            name=\"finalita\"\r\n                            className={'form-select' + (errors.finalita && touched.finalita ? ' is-invalid' : '')}\r\n                          >\r\n                            <option className={'custom-select-option'} value={''}>\r\n                              Seleziona una Finalità\r\n                            </option>\r\n                            {K.finalita.map(option => (\r\n                              <option key={option.key} className={'custom-select-option'} value={option.value}>\r\n                                {option.key}\r\n                              </option>\r\n                            ))}\r\n                          </Field>\r\n                          <ErrorMessage name=\"finalita\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                      </Col>\r\n                      <Col>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"codiceFiscale\">P.IVA/Codice Fiscale*</label>\r\n                          <Field\r\n                            name=\"codiceFiscale\"\r\n                            type=\"text\"\r\n                            className={'form-control' + (errors.codiceFiscale && touched.codiceFiscale ? ' is-invalid' : '')}\r\n                          />\r\n                          <ErrorMessage name=\"codiceFiscale\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"nominativoRiferimento\">Nominativo Riferimento</label>\r\n                          <Field name=\"nominativoRiferimento\" type=\"text\" className={'form-control'} />\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"prodotto\">Prodotto*</label>\r\n                          <Field\r\n                            as=\"select\"\r\n                            name=\"prodotto\"\r\n                            className={'form-select' + (errors.prodotto && touched.prodotto ? ' is-invalid' : '')}\r\n                          >\r\n                            <option className={'custom-select-option'} value={''}>\r\n                              Seleziona un Prodotto\r\n                            </option>\r\n                            {K.prodotto.map(option => (\r\n                              <option key={option.key} className={'custom-select-option'} value={option.value}>\r\n                                {option.key}\r\n                              </option>\r\n                            ))}\r\n                          </Field>\r\n                          <ErrorMessage name=\"prodotto\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"durata\">Durata* </label>\r\n                          <Field\r\n                            as=\"select\"\r\n                            name=\"durata\"\r\n                            className={'form-select' + (errors.durata && touched.durata ? ' is-invalid' : '')}\r\n                          >\r\n                            <option className={'custom-select-option'} value={''} disabled={values.finalita ===undefined || values.finalita === ''}>\r\n                              Seleziona una Durata\r\n                            </option>\r\n                            {values.finalita === \"INVESTIMENTI\" ? K.durata.map(option => (\r\n                              <option key={option.key} className={'custom-select-option'} value={option.value} disabled={values.finalita ===undefined || values.finalita === ''}>\r\n                                {option.key}\r\n                              </option>\r\n                            )):\r\n                            values.finalita !== \"INVESTIMENTI\" && K.durata.filter(value => value.value === '60').map(option => (\r\n                              <option key={option.key} className={'custom-select-option'} value={option.value}  disabled={values.finalita ===undefined || values.finalita === ''}>\r\n                                {option.key}\r\n                              </option>\r\n                            ))}\r\n                          </Field>\r\n                          <ErrorMessage name=\"durata\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"preammortamento\">Preammortamento*</label>\r\n                          <Field\r\n                            as=\"select\"\r\n                            name=\"preammortamento\"\r\n                            className={'form-select' + (errors.preammortamento && touched.preammortamento ? ' is-invalid' : '')}\r\n                          >\r\n                            <option className={'custom-select-option'} value={''}>\r\n                              Seleziona Preammortamento\r\n                            </option>\r\n                            {K.preammortamento.map(option => (\r\n                              <option key={option.key} className={'custom-select-option'} value={option.value}>\r\n                                {option.key}\r\n                              </option>\r\n                            ))}\r\n                          </Field>\r\n                          <ErrorMessage name=\"preammortamento\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div className=\"form-group mb-4\">\r\n                          <label htmlFor=\"periodicita\">Periodicità*</label>\r\n                          <Field\r\n                            as=\"select\"\r\n                            name=\"periodicita\"\r\n                            className={'form-select' + (errors.periodicita && touched.periodicita ? ' is-invalid' : '')}\r\n                          >\r\n                            <option className={'custom-select-option'} value={''}>\r\n                              Seleziona una Periodicità\r\n                            </option>\r\n                            */}\r\n                            {K.periodicita.map(option => (\r\n                              <option key={option.key} className={'custom-select-option'} value={option.value}>\r\n                                {option.key}\r\n                              </option>\r\n                            ))}\r\n                          </Field>\r\n                          <ErrorMessage name=\"periodicita\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </DivWhiteRoundedShadowed>\r\n                  {/*6LdFHCshAAAAAGqnoDlJRYgjNWnL-DSRAiesUwbx*/}\r\n                  <div className=\"text-xs-end\">\r\n                    <ReCAPTCHA\r\n                      className={errors.recaptcha && touched.recaptcha ? 'rec-div-invalid' : 'rec-div'}\r\n                      sitekey=\"6LdP908iAAAAAAyZ8deXI2VsUkchMhGgVB8w4gR0\"\r\n                      render=\"explicit\"\r\n                      onChange={response => {\r\n                        setFieldValue('recaptcha', response);\r\n                      }}\r\n                    />\r\n                    {errors.recaptcha && touched.recaptcha && <p>Verifica obbligatoria</p>}\r\n                    {/*<div className=\"g-recaptcha\" data-sitekey=\"6LdFHCshAAAAAPA70VJk5T9LC8XzzemwybZ0r7Oj\"/>*/}\r\n                  </div>\r\n\r\n                  <Row>\r\n                    <Col className={'align-to-end mt-2'}>\r\n                      <button type=\"submit\" className=\"custom-button-richiesta\">\r\n                        {' '}\r\n                        Invia la tua richiesta\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              )}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Richiesta} from \"./components/richiesta/Richiesta\";\r\nimport React, { Component }  from 'react';\r\n\r\nfunction App() {\r\n\r\n  // const { keycloak, initialized } = useKeycloak()\r\n  // if (keycloak.authenticated) {\r\n  //   initApplicationConstants();\r\n  //   checkNewUser();\r\n  // }\r\n\r\n  return (\r\n   <Richiesta/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {initServiceUrl} from \"./Constants\";\r\n\r\n\r\nconst ATTRIBUTES = {\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass WidgetElement extends HTMLElement {\r\n\r\n  static get observedAttributes() {\r\n    return Object.values(ATTRIBUTES);\r\n  }\r\n\r\n  connectedCallback() {\r\n    const serviceUrl = this.getAttribute(\"service-url\")\r\n    initServiceUrl(serviceUrl);\r\n\r\n    this.mountPoint = document.createElement('div');\r\n    this.appendChild(this.mountPoint);\r\n\r\n    ReactDOM.render(<App serviceUrl={serviceUrl}/>, this.mountPoint);\r\n  }\r\n}\r\n\r\n\r\ncustomElements.define('richiesta-widget', WidgetElement);\r\n\r\nexport default WidgetElement;\r\n\r\n"],"sourceRoot":""}